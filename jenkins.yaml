---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: jenkins
  name: jenkins
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jenkins-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: jenkins
    namespace: default
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pv-claim
  labels:
    app: jenkins
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
  labels:
    app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccountName: jenkins
      volumes:
      - name: jenkins-pv-storage
        persistentVolumeClaim:
          claimName: jenkins-pv-claim
      containers:
      - name: jenkins
        image: mfarhan1998/jenkins-master:centos
        env:
        - name: JAVA_OPTS
          value: -Djenkins.install.runSetupWizard=false
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        - containerPort: 50000
        volumeMounts:
        - mountPath: "/var/jenkins_home"
          name: jenkins-pv-storage
        securityContext:
          privileged: true
      initContainers:
      - name: volume-mount-data-log
        image: busybox
        imagePullPolicy: Always
        command: ["sh", "-c", "chown -R 1000:1000 /var/jenkins_home"]
        volumeMounts:
        - mountPath: "/var/jenkins_home"
          name: jenkins-pv-storage
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  labels:
    app: jenkins-svc
spec:
  ports:
  - port: 8080
    targetPort: 8080
    type: NodePort
    nodePort: 30008
    protocol: TCP
    name: app
  - port: 50000
    targetPort: 50000
    protocol: TCP
    name: jnlp
  selector:
    app: jenkins
---
